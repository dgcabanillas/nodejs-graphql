type User {
    id: ID!
    username: String!
    email: String!
    password: String!
    createdAt: String!
    updatedAt: String!
    #asociacion de uno a muchos
    articles: [Article!]
    role: Role!
}

enum Role {
    ADMIN
    EDITOR
    NORMAL
}

input userEdit {
    username: String
    email: String
    role: Role
}

type AuthResponse {
    user: User!
    token: String!
}

type Query {
    allUsers: [User!]
}

type Mutation {
    signup (username: String!, email: String!, password: String!): AuthResponse!
    login (email: String!, password: String!): AuthResponse!
    refreshToken (token: String!): String!
    userEdit (id: ID!, dataEdit: userEdit!): User!
}